{"mappings":"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","sources":["js/particle.js"],"sourcesContent":["(function ($) {\r\n  \"use strict\";\r\n\r\n  $(function () {\r\n    var MainStage = (function () {\r\n      var $window = $(window),\r\n        windowWidth = window.innerWidth,\r\n        windowHeight = window.innerHeight,\r\n        rendererCanvasID = \"3D-particle-effect-canvas\";\r\n\r\n      var renderer,\r\n        texture,\r\n        scene,\r\n        camera,\r\n        particles,\r\n        imagedata,\r\n        clock = new THREE.Clock(),\r\n        mouseX = 0,\r\n        mouseY = 0,\r\n        isMouseDown = true,\r\n        lastMousePos = { x: 0, y: 0 },\r\n        windowHalfX = windowWidth / 2,\r\n        windowHalfY = windowHeight / 2;\r\n\r\n      //particle rotation\r\n      var particleRotation;\r\n\r\n      var centerVector = new THREE.Vector3(0, 0, 0);\r\n      var previousTime = 0;\r\n\r\n      function init() {\r\n        //@https://github.com/mrdoob/three.js/blob/dev/src/extras/ImageUtils.js#L21\r\n        THREE.ImageUtils.crossOrigin = \"\";\r\n\r\n        //WebGL Renderer\r\n        renderer = new THREE.WebGLRenderer({\r\n          canvas: document.getElementById(rendererCanvasID), //canvas\r\n          alpha: true,\r\n          antialias: true,\r\n        });\r\n\r\n        renderer.setSize(windowWidth, windowHeight);\r\n\r\n        //Scene\r\n        scene = new THREE.Scene();\r\n\r\n        //camera\r\n        camera = new THREE.PerspectiveCamera(\r\n          50,\r\n          windowWidth / windowHeight,\r\n          0.1,\r\n          10000\r\n        );\r\n        camera.position.set(-100, 0, 600);\r\n        camera.lookAt(centerVector);\r\n        scene.add(camera);\r\n\r\n        // add particle rotation\r\n        particleRotation = new THREE.Object3D();\r\n        scene.add(particleRotation);\r\n        var geometryPR = new THREE.TetrahedronGeometry(2, 0),\r\n          materialPR = new THREE.MeshPhongMaterial({\r\n            color: 0xffffff,\r\n            flatShading: THREE.FlatShading,\r\n          });\r\n\r\n        for (var i = 0; i < 300; i++) {\r\n          var mesh = new THREE.Mesh(geometryPR, materialPR);\r\n          mesh.position\r\n            .set(Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5)\r\n            .normalize();\r\n          mesh.position.multiplyScalar(90 + Math.random() * 700);\r\n          mesh.rotation.set(\r\n            Math.random() * 2,\r\n            Math.random() * 2,\r\n            Math.random() * 2\r\n          );\r\n          particleRotation.add(mesh);\r\n        }\r\n\r\n        var ambientLight = new THREE.AmbientLight(0x999999);\r\n        scene.add(ambientLight);\r\n\r\n        var lights = [];\r\n        lights[0] = new THREE.DirectionalLight(0xffffff, 1);\r\n        lights[0].position.set(1, 0, 0);\r\n        lights[1] = new THREE.DirectionalLight(0x11e8bb, 1);\r\n        lights[1].position.set(0.75, 1, 0.5);\r\n        lights[2] = new THREE.DirectionalLight(0x8200c9, 1);\r\n        lights[2].position.set(-0.75, -1, 0.5);\r\n        scene.add(lights[0]);\r\n        scene.add(lights[1]);\r\n        scene.add(lights[2]);\r\n\r\n        //----\r\n        document.addEventListener(\"mousemove\", onDocumentMouseMove, false);\r\n        // document.addEventListener(\"touchstart\", onDocumentTouchStart, false);\r\n        // document.addEventListener(\"touchmove\", onDocumentTouchMove, false);\r\n\r\n        document.addEventListener(\"mousedown\", onDocumentMouseDown, false);\r\n        document.addEventListener(\"mouseup\", onDocumentMouseUp, false);\r\n\r\n        // Fires when the window changes\r\n        window.addEventListener(\"resize\", onWindowResize, false);\r\n      }\r\n\r\n      function render() {\r\n        requestAnimationFrame(render);\r\n\r\n        var delta = clock.getDelta(),\r\n          thickness = 40;\r\n\r\n        //Need to add judgment to avoid Cannot read property 'geometry' of undefined\r\n        if (typeof particles != typeof undefined) {\r\n          for (var i = 0, j = particles.geometry.vertices.length; i < j; i++) {\r\n            var particle = particles.geometry.vertices[i];\r\n            particle.x +=\r\n              (particle.destination.x - particle.x) * particle.speed;\r\n            particle.y +=\r\n              (particle.destination.y - particle.y) * particle.speed;\r\n            particle.z +=\r\n              (particle.destination.z - particle.z) * particle.speed;\r\n          }\r\n\r\n          if (delta - previousTime > thickness) {\r\n            var index = Math.floor(\r\n              Math.random() * particles.geometry.vertices.length\r\n            );\r\n            var particle1 = particles.geometry.vertices[index];\r\n            var particle2 =\r\n              particles.geometry.vertices[\r\n                particles.geometry.vertices.length - index\r\n              ];\r\n\r\n            TweenMax.to(particle, Math.random() * 2 + 1, {\r\n              x: particle2.x,\r\n              y: particle2.y,\r\n              ease: Power2.easeInOut,\r\n            });\r\n\r\n            TweenMax.to(particle2, Math.random() * 2 + 1, {\r\n              x: particle1.x,\r\n              y: particle1.y,\r\n              ease: Power2.easeInOut,\r\n            });\r\n\r\n            previousTime = delta;\r\n          }\r\n\r\n          particles.geometry.verticesNeedUpdate = true;\r\n        }\r\n\r\n        if (!isMouseDown) {\r\n          camera.position.x += (0 - camera.position.x) * 0.06;\r\n          camera.position.y += (0 - camera.position.y) * 0.06;\r\n        }\r\n\r\n        camera.position.x += (mouseX - camera.position.x) * 0.09;\r\n        camera.position.y += (-mouseY - camera.position.y) * 0.09;\r\n        camera.lookAt(centerVector);\r\n\r\n        //particle rotation\r\n        particleRotation.rotation.x += 0.0;\r\n        particleRotation.rotation.y -= 0.004;\r\n\r\n        renderer.render(scene, camera);\r\n      }\r\n\r\n      function onWindowResize() {\r\n        camera.aspect = window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n      }\r\n\r\n      function onDocumentMouseMove(event) {\r\n        mouseX = event.clientX - windowHalfX;\r\n        mouseY = event.clientY - windowHalfY;\r\n\r\n        if (isMouseDown) {\r\n          camera.position.x += (event.clientX - lastMousePos.x) / 100;\r\n          camera.position.y -= (event.clientY - lastMousePos.y) / 100;\r\n          camera.lookAt(centerVector);\r\n          lastMousePos = { x: event.clientX, y: event.clientY };\r\n        }\r\n      }\r\n\r\n      function onDocumentTouchStart(event) {\r\n        if (event.touches.length == 1) {\r\n          event.preventDefault();\r\n\r\n          mouseX = event.touches[0].pageX - windowHalfX;\r\n          mouseY = event.touches[0].pageY - windowHalfY;\r\n        }\r\n      }\r\n\r\n      function onDocumentTouchMove(event) {\r\n        if (event.touches.length == 1) {\r\n          event.preventDefault();\r\n\r\n          mouseX = event.touches[0].pageX - windowHalfX;\r\n          mouseY = event.touches[0].pageY - windowHalfY;\r\n        }\r\n      }\r\n\r\n      function onDocumentMouseUp() {\r\n        isMouseDown = false;\r\n      }\r\n\r\n      function onDocumentMouseDown(event) {\r\n        isMouseDown = true;\r\n        lastMousePos = { x: event.clientX, y: event.clientY };\r\n      }\r\n\r\n      /*\r\n       * Get Image Data when Draw Image To Canvas\r\n       *\r\n       * @param  {Object} image         - Overridden with a record type holding data, width and height.\r\n       * @return {JSON}                 - The image data.\r\n       */\r\n      function getImageData(image) {\r\n        var canvas = document.createElement(\"canvas\");\r\n        canvas.width = image.width;\r\n        canvas.height = image.height;\r\n\r\n        var ctx = canvas.getContext(\"2d\");\r\n        ctx.drawImage(image, 0, 0);\r\n\r\n        return ctx.getImageData(0, 0, image.width, image.height);\r\n      }\r\n\r\n      //\r\n      //-------------------------------------\r\n      return {\r\n        init: init,\r\n        render: render,\r\n        getScene: function () {\r\n          return scene;\r\n        },\r\n        getCamera: function () {\r\n          return camera;\r\n        },\r\n      };\r\n    })();\r\n\r\n    MainStage.init();\r\n    MainStage.render();\r\n  });\r\n})(jQuery);\r\n"],"names":[],"version":3,"file":"index.12580016.js.map","sourceRoot":"/__parcel_source_root/"}